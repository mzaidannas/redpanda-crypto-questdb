---
version: '3.7'
volumes:
  redpanda: {}
  connect: {}
  questdb: {}
  clickhouse: {}
  citus: {}
services:
  redpanda:
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers'
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers'
      # from outside the Docker network.
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with each other internally.
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
      # Mode dev-container uses well-known configuration properties for development in containers.
      - --mode dev-container
      # Tells Seastar (the framework Redpanda uses under the hood) to use 1 core on the system.
      - --smp 1
      - --default-log-level=info
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.10
    container_name: redpanda-0
    volumes:
      - redpanda:/var/lib/redpanda/data
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644

  console:
    container_name: redpanda-console
    image: docker.redpanda.com/redpandadata/console:v2.4.5
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:9644"]
        connect:
          enabled: true
          clusters:
            - name: datagen
              url: http://connect:8083
    ports:
      - 8080:8080
    depends_on:
      - redpanda

  kafka-connect:
    image: kafka-connect
    build:
       context: .
       dockerfile: ./docker/kafka-connect/Dockerfile
    hostname: connect
    container_name: connect
    depends_on:
      - redpanda
    ports:
      - 8083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'redpanda:9092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
    volumes:
    - connect:/var/lib/kafka/data

  questdb:
    image: questdb/questdb:7.4.0
    hostname: questdb
    container_name: questdb
    volumes:
      - questdb:/var/lib/questdb
    ports:
      - 9000:9000 # Web UI
      - 8812:8812 # Postgres Wire Protocol

  clickhouse:
    image: clickhouse/clickhouse-server:24.3.1-alpine
    hostname: clickhouse
    container_name: clickhouse
    environment:
      CLICKHOUSE_PASSWORD: password
    volumes:
      - clickhouse:/var/lib/clickhouse
      - ./clickhouse/clickhouse_postgresql.xml:/etc/clickhouse-server/config.d/postgresql.xml
    ports:
      - 8123:8123 # Web UI
      - 9005:9005 # Postgres Wire Protocol

  citus:
    image: citusdata/citus:alpine
    hostname: citus
    container_name: citus
    volumes:
      - citus:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=password
    ports:
      - 5432:5432 # Postgres Port

  citusweb:
    image: sosedoff/pgweb:0.15.0
    container_name: citusweb
    environment:
      DATABASE_URL: postgres://postgres:password@citus:5432/postgres?sslmode=disable
    ports:
      - 8084:8081
    depends_on:
      - citus
